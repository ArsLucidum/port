/* ===== BUTTONS ===== */
.btn {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  font-size: var(--text-base);
  font-weight: var(--font-weight-medium);
  text-decoration: none;
  transition: 
    transform var(--transition-fast) cubic-bezier(0.4, 0.0, 0.2, 1),
    background var(--transition-fast) cubic-bezier(0.25, 0.46, 0.45, 0.94),
    box-shadow var(--transition-normal) cubic-bezier(0.4, 0.0, 0.2, 1),
    color var(--transition-fast) ease-out;
  cursor: pointer;
  border: none;
  position: relative;
  overflow: hidden;
}

.btn-primary {
  color: var(--text-on-accent);
  background: linear-gradient(135deg, var(--surface-emphasis) 0%, var(--state-hover) 100%);
  border: none;
  border-radius: var(--radius-sm);
  padding: var(--space-3) var(--space-6);
  padding-inline: var(--space-6);
  padding-block: var(--space-3);
  box-shadow: var(--shadow-soft);
  background-size: 200% 200%;
  background-position: 0% 50%;
}

.btn-primary::before {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: linear-gradient(90deg, 
    transparent, 
    rgba(255, 255, 255, 0.3), 
    transparent);
  transition: left 0.8s cubic-bezier(0.4, 0.0, 0.2, 1);
  z-index: 1;
}

.btn-primary > * {
  position: relative;
  z-index: 2;
}

.btn-primary:hover {
  background-position: 100% 50%;
  transform: translateY(-2px) scale(1.02);
  box-shadow: var(--shadow-hover);
  text-decoration: none;
  animation: 
    buttonElevate 0.3s cubic-bezier(0.4, 0.0, 0.2, 1) forwards,
    gentlePulse 2s ease-in-out 0.3s infinite;
}

.btn-primary:hover::before {
  left: 100%;
  transition: left 0.6s cubic-bezier(0.4, 0.0, 0.2, 1);
}

.btn-primary:active {
  background: var(--state-active);
  transform: translateY(-1px) scale(0.98);
  box-shadow: var(--shadow-active);
  animation: buttonPress 0.1s cubic-bezier(0.4, 0.0, 0.6, 1);
  transition: all 0.1s cubic-bezier(0.4, 0.0, 0.6, 1);
}

.btn-primary:focus-visible {
  outline: none;
  box-shadow: 
    var(--shadow-focus), 
    var(--shadow-soft),
    0 0 0 4px var(--mix-20);
  animation: 
    focusRingExpand 0.3s cubic-bezier(0.4, 0.0, 0.2, 1),
    focusGlow 2s ease-in-out infinite;
}

.btn-secondary:hover {
  animation: subtleGlow 2s ease-in-out infinite;
  border-color: var(--border-accent);
}

.btn-secondary {
  color: var(--text-secondary);
  background: var(--mix-05);
  border: 1px solid var(--mix-20);
  border-radius: var(--radius-sm);
  padding: var(--space-3) var(--space-6);
  position: relative;
  overflow: hidden;
}

.btn-secondary::before {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: linear-gradient(90deg, transparent, var(--mix-15), transparent);
  transition: left var(--transition-normal);
}

.btn-secondary:hover::before {
  left: 100%;
}

.btn-secondary:hover {
  color: var(--mix-dark-20);
  border-color: var(--mix-40);
  background: var(--mix-10);
  text-decoration: none;
  transform: translateY(-2px) scale(1.02);
  animation: secondaryButtonElevate 0.3s cubic-bezier(0.4, 0.0, 0.2, 1);
}

/* ===== SKILLS ===== */
.skills {
  margin-top: var(--spacing-xl);
}

.skills h3 {
  font-size: var(--text-xl);
  margin-bottom: var(--spacing-md);
}

.skills-grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(160px, 1fr));
  gap: var(--spacing-md) var(--spacing-sm);
  align-items: start;
  justify-items: start;
}

/* Subgrid support for precise skill alignment */
@supports (grid-template-rows: subgrid) {
  .skills-grid {
    grid-auto-rows: min-content;
  }
  
  .skill-tag {
    display: grid;
    grid-template-rows: subgrid;
    align-content: center;
  }
}

.skill-tag {
  color: var(--text-secondary);
  font-size: var(--text-sm);
  font-weight: 300;
  line-height: 1.5;
  display: flex;
  align-items: center;
  transition: color var(--transition-fast);
  cursor: default;
}

.skill-tag:hover {
  color: var(--text-primary);
  transform: scale(1.05);
  animation: gentleBounce 0.3s ease-out;
}

.skill-tag:hover::before {
  background: var(--mix-60);
  transform: scale(1.2);
  animation: colorShift 0.3s ease-out;
}

.skill-tag::before {
  content: 'â€¢';
  color: var(--brand);
  font-weight: var(--font-weight-bold);
  margin-right: var(--space-2);
}

/* ===== LANGUAGES ===== */
.languages {
  margin-top: var(--space-8);
}

.languages h3 {
  font-size: var(--text-xl);
  margin-bottom: var(--space-4);
}

.languages-grid {
  display: grid;
  gap: var(--space-4);
}

.language-item {
  display: flex;
  flex-direction: column;
  gap: var(--space-2);
  transition: transform var(--transition-fast);
  cursor: default;
}

.language-item:hover {
  transform: translateY(-1px);
}

.language-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.language-name {
  font-weight: var(--font-weight-medium);
  color: var(--text-primary);
}

.language-level {
  font-size: var(--text-sm);
  font-weight: 300;
  color: var(--text-muted);
}

.language-progress {
  height: 4px;
  background: var(--mix-05);
  overflow: hidden;
  border-radius: 2px;
}

.language-bar {
  height: 100%;
  background: linear-gradient(90deg, var(--mix-70), var(--mix-50), var(--brand));
  transition: all var(--transition-normal);
  border-radius: 2px;
}

.language-item:hover .language-bar {
  background: linear-gradient(90deg, var(--mix-80), var(--mix-60), var(--state-hover));
  transform: scaleX(1.02);
  transform-origin: left;
}

/* ===== PROJECT CARDS ===== */
.projects-grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(min(100%, 320px), 1fr));
  gap: var(--section-gap);
  margin-bottom: var(--spacing-3xl);
  grid-auto-rows: 1fr;
  place-items: stretch;
}

/* Advanced CSS Grid Masonry Layout */
@supports (grid-template-rows: masonry) {
  .projects-grid {
    grid-template-rows: masonry;
    align-items: start;
  }
  
  .project-card {
    height: auto;
  }
}

/* Masonry Fallback using CSS Grid auto-rows */
.projects-grid.masonry-fallback {
  grid-template-columns: repeat(auto-fill, minmax(min(100%, 300px), 1fr));
  grid-auto-rows: min-content;
  align-items: start;
}

.projects-grid.masonry-fallback .project-card {
  height: auto;
  align-self: start;
}

/* Staggered Heights for Visual Interest */
.project-card:nth-child(4n+1) .project-image {
  aspect-ratio: 16 / 10;
}

.project-card:nth-child(4n+2) .project-image {
  aspect-ratio: 16 / 9;
}

.project-card:nth-child(4n+3) .project-image {
  aspect-ratio: 16 / 8;
}

.project-card:nth-child(4n+4) .project-image {
  aspect-ratio: 16 / 11;
}

.project-card {
  background: var(--surface-primary);
  border: 1px solid var(--mix-10);
  border-radius: var(--radius-sm);
  overflow: hidden;
  transition: all var(--transition-normal);
  cursor: pointer;
  will-change: transform;
  box-shadow: var(--shadow-subtle);
  display: grid;
  grid-template-rows: auto 1fr;
  height: 100%;
  contain: layout style paint;
  content-visibility: auto;
  contain-intrinsic-size: 320px 400px;
}

/* Subgrid support for aligned card content */
@supports (grid-template-rows: subgrid) {
  .projects-grid {
    grid-template-rows: repeat(auto-fit, max-content);
  }
  
  .project-card {
    display: subgrid;
    grid-row: span 2;
  }
  
  .project-content {
    display: subgrid;
    grid-template-rows: subgrid;
  }
}

.project-card:hover {
  background: var(--mix-05);
  border-color: var(--mix-20);
  transform: translateY(-4px);
  box-shadow: var(--shadow-emphasis);
  animation: hoverScale 0.3s ease-out;
}

.project-card:hover .project-title {
  color: var(--mix-dark-30);
  background: linear-gradient(90deg, transparent, var(--mix-15), transparent);
  background-size: 0 100%;
  background-repeat: no-repeat;
  background-position: left;
  animation: textHighlight 0.4s ease-out 0.1s both;
}

.project-card:active {
  transform: translateY(-2px);
  transition: transform 0.1s ease-out;
}

.project-card:focus-visible {
  outline: none;
  box-shadow: var(--shadow-focus), var(--shadow-emphasis);
  animation: focusRingExpand 0.2s ease-out;
}

.project-image {
  aspect-ratio: 16 / 9;
  min-height: 200px;
  background: var(--mix-warm-10);
  overflow: hidden;
  border-top-left-radius: var(--radius-sm);
  border-top-right-radius: var(--radius-sm);
  position: relative;
}

.project-image img {
  width: 100%;
  height: 100%;
  object-fit: cover;
  object-position: center;
  transition: transform var(--transition-normal);
  image-rendering: -webkit-optimize-contrast;
  image-rendering: crisp-edges;
}

/* Advanced responsive image support */
.project-image img[loading="lazy"] {
  content-visibility: auto;
  contain-intrinsic-size: 320px 180px;
}

/* Modern image formats with fallbacks */
.project-image picture {
  display: block;
  width: 100%;
  height: 100%;
}

.project-image source {
  display: block;
  width: 100%;
  height: 100%;
  object-fit: cover;
  object-position: center;
}

.project-card:hover .project-image img {
  transform: scale(1.05);
}

.project-content {
  padding: var(--card-padding);
  padding-inline: var(--card-padding);
  padding-block: var(--card-padding);
  display: flex;
  flex-direction: column;
  gap: var(--element-gap);
  height: 100%;
}

.project-title {
  font-size: var(--text-xl);
  font-weight: var(--font-weight-semibold);
  color: var(--text-primary);
  margin-bottom: 0;
  line-height: 1.3;
}

.project-description {
  color: var(--text-secondary);
  line-height: calc(1.5 * var(--spacing-ratio) - 1);
  margin-bottom: 0;
  flex-grow: 1;
}

.project-tags {
  display: flex;
  flex-wrap: wrap;
  gap: var(--micro-gap);
  margin-top: auto;
}

.project-tag {
  background: var(--mix-warm-10);
  color: var(--desaturate-20);
  padding: var(--spacing-xs) var(--spacing-sm);
  font-size: var(--text-xs);
  font-weight: var(--font-weight-medium);
  letter-spacing: 0.05em;
  border-radius: var(--radius-sm);
  transition: all var(--transition-fast);
}

.project-card:hover .project-tag {
  background: var(--mix-warm-20);
  color: var(--mix-dark-10);
  transform: translateY(-1px);
}